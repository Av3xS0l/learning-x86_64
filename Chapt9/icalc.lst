     1                                  ; icalc.asm
     2                                  
     3                                  extern  printf
     4                                  section .data
     5 00000000 8000000000000000            number1 dq  128                                 ; the used number
     6 00000008 1300000000000000            number2 dq  19
     7 00000010 F4FFFFFFFFFFFFFF            neg_num dq  -12
     8 00000018 546865206E756D6265-         fmt     db  "The numbers are %ld and %ld",10,0
     8 00000021 72732061726520256C-
     8 0000002A 6420616E6420256C64-
     8 00000033 0A00               
     9 00000035 257320256C640A00            fmtint  db  "%s %ld",10,0
    10 0000003D 5468652073756D2069-         sumi    db  "The sum is",0
    10 00000046 7300               
    11 00000048 546865206469666665-         difi    db  "The difference is",0
    11 00000051 72656E636520697300 
    12 0000005A 4E756D626572203120-         inci    db  "Number 1 incremented:",0
    12 00000063 696E6372656D656E74-
    12 0000006C 65643A00           
    13 00000070 4E756D626572203120-         deci    db  "Number 1 decremented:",0
    13 00000079 64656372656D656E74-
    13 00000082 65643A00           
    14 00000086 4E756D626572203120-         sali    db  "Number 1 Shift left 2 (x4):",0
    14 0000008F 5368696674206C6566-
    14 00000098 74203220287834293A-
    14 000000A1 00                 
    15 000000A2 4E756D626572203120-         sari    db  "Number 1 Shift right 2 (/4):",0
    15 000000AB 536869667420726967-
    15 000000B4 6874203220282F3429-
    15 000000BD 3A00               
    16 000000BF 4E756D626572203120-         sariex  db  "Number 1 Shift right 2 (/4) with "
    16 000000C8 536869667420726967-
    16 000000D1 6874203220282F3429-
    16 000000DA 207769746820       
    17 000000E0 7369676E2065787465-                 db  "sign extention:",0
    17 000000E9 6E74696F6E3A00     
    18 000000F0 5468652070726F6475-         multi   db  "The product is:",0
    18 000000F9 63742069733A00     
    19 00000100 54686520696E746567-         divi    db  "The integer quoitent is:",0
    19 00000109 65722071756F697465-
    19 00000112 6E742069733A00     
    20 00000119 546865206D6F64756C-         remi    db  "The modulo is:",0
    20 00000122 6F2069733A00       
    21                                  
    22                                  section .bss
    23 00000000 ????????????????            resulti resq    1
    24 00000008 ????????????????            modulo  resq    1
    25                                  
    26                                  section .text
    27                                      global main
    28                                  
    29                                  main:
    30                                  
    31 00000000 55                          push    rbp
    32 00000001 4889E5                      mov     rbp, rsp
    33                                  
    34                                      ; display the numbers
    35 00000004 48BF-                       mov     rdi, fmt
    35 00000006 [1800000000000000] 
    36 0000000E 488B3425[00000000]          mov     rsi, [number1]
    37 00000016 488B1425[08000000]          mov     rdx, [number2]
    38 0000001E 4831C0                      xor       rax, rax
    39 00000021 E8(00000000)                call    printf
    40                                      
    41                                      ; adding
    42 00000026 488B0425[00000000]          mov     rax, [number1]
    43 0000002E 48030425[08000000]          add     rax, [number2]
    44 00000036 48890425[00000000]          mov     [resulti], rax
    45                                  
    46 0000003E 48BF-                           mov     rdi, fmtint
    46 00000040 [3500000000000000] 
    47 00000048 48BE-                           mov     rsi, sumi
    47 0000004A [3D00000000000000] 
    48 00000052 488B1425[00000000]              mov     rdx, [resulti]
    49 0000005A 4831C0                          xor       rax, rax
    50 0000005D E8(00000000)                    call    printf
    51                                      ; subtracting
    52 00000062 488B0425[00000000]          mov     rax, [number1]
    53 0000006A 482B0425[08000000]          sub     rax, [number2]
    54 00000072 48890425[00000000]          mov     [resulti], rax
    55                                  
    56 0000007A 48BF-                           mov     rdi, fmtint
    56 0000007C [3500000000000000] 
    57 00000084 48BE-                           mov     rsi, difi
    57 00000086 [4800000000000000] 
    58 0000008E 488B1425[00000000]              mov     rdx, [resulti]
    59 00000096 4831C0                          xor       rax, rax
    60 00000099 E8(00000000)                    call    printf
    61                                      
    62                                      ; increments
    63 0000009E 488B0425[00000000]          mov     rax, [number1]
    64 000000A6 48FFC0                      inc     rax
    65 000000A9 48890425[00000000]          mov     [resulti], rax
    66                                  
    67 000000B1 48BF-                           mov     rdi, fmtint
    67 000000B3 [3500000000000000] 
    68 000000BB 48BE-                           mov     rsi, inci
    68 000000BD [5A00000000000000] 
    69 000000C5 488B1425[00000000]              mov     rdx, [resulti]
    70 000000CD 4831C0                          xor       rax, rax
    71 000000D0 E8(00000000)                    call    printf
    72                                      
    73                                      ; decrement
    74 000000D5 488B0425[00000000]          mov     rax, [number1]
    75 000000DD 48FFC8                      dec     rax
    76 000000E0 48890425[00000000]          mov     [resulti], rax
    77                                  
    78 000000E8 48BF-                           mov     rdi, fmtint
    78 000000EA [3500000000000000] 
    79 000000F2 48BE-                           mov     rsi, deci
    79 000000F4 [7000000000000000] 
    80 000000FC 488B1425[00000000]              mov     rdx, [resulti]
    81 00000104 4831C0                          xor       rax, rax
    82 00000107 E8(00000000)                    call    printf
    83                                      
    84                                      ; aritmetic shift left = *2
    85 0000010C 488B0425[00000000]          mov     rax, [number1]
    86 00000114 48C1E002                    sal     rax, 2
    87 00000118 48890425[00000000]          mov     [resulti], rax
    88                                  
    89 00000120 48BF-                           mov     rdi, fmtint
    89 00000122 [3500000000000000] 
    90 0000012A 48BE-                           mov     rsi, sali
    90 0000012C [8600000000000000] 
    91 00000134 488B1425[00000000]              mov     rdx, [resulti]
    92 0000013C 4831C0                          xor       rax, rax
    93 0000013F E8(00000000)                    call    printf
    94                                  
    95                                      ; araithmetic shift right = /2
    96 00000144 488B0425[00000000]          mov     rax, [number1]
    97 0000014C 48C1F802                    sar     rax, 2
    98 00000150 48890425[00000000]          mov     [resulti], rax
    99                                  
   100 00000158 48BF-                           mov     rdi, fmtint
   100 0000015A [3500000000000000] 
   101 00000162 48BE-                           mov     rsi, sari
   101 00000164 [A200000000000000] 
   102 0000016C 488B1425[00000000]              mov     rdx, [resulti]
   103 00000174 4831C0                          xor       rax, rax
   104 00000177 E8(00000000)                    call    printf
   105                                      
   106                                      ; Ashr with sign extention
   107 0000017C 488B0425[00000000]          mov     rax, [number1]
   108 00000184 48C1F802                    sar     rax, 2
   109 00000188 48890425[00000000]          mov     [resulti], rax
   110                                  
   111 00000190 48BF-                           mov     rdi, fmtint
   111 00000192 [3500000000000000] 
   112 0000019A 48BE-                           mov     rsi, sari
   112 0000019C [A200000000000000] 
   113 000001A4 488B1425[00000000]              mov     rdx, [resulti]
   114 000001AC 4831C0                          xor     rax, rax
   115 000001AF E8(00000000)                    call    printf
   116                                  
   117                                      ; multiply
   118 000001B4 488B0425[00000000]          mov     rax, [number1]
   119 000001BC 48F72C25[08000000]          imul    qword [number2]
   120 000001C4 48890425[00000000]          mov     [resulti], rax
   121                                  
   122 000001CC 48BF-                           mov     rdi, fmtint
   122 000001CE [3500000000000000] 
   123 000001D6 48BE-                           mov     rsi, multi
   123 000001D8 [F000000000000000] 
   124 000001E0 488B1425[00000000]              mov     rdx, [resulti]
   125 000001E8 4831C0                          xor     rax, rax
   126 000001EB E8(00000000)                    call    printf
   127                                  
   128                                      ; divide
   129 000001F0 488B0425[00000000]          mov     rax, [number1]
   130 000001F8 4831D2                      xor     rdx, rdx
   131 000001FB 48F73C25[08000000]          idiv    qword [number2]
   132 00000203 48890425[00000000]          mov     [resulti], rax
   133 0000020B 48891425[08000000]          mov     [modulo], rdx
   134                                  
   135 00000213 48BF-                           mov     rdi, fmtint
   135 00000215 [3500000000000000] 
   136 0000021D 48BE-                           mov     rsi, divi
   136 0000021F [0001000000000000] 
   137 00000227 488B1425[00000000]              mov     rdx, [resulti]
   138 0000022F 4831C0                          xor     rax, rax
   139 00000232 E8(00000000)                    call    printf
   140                                  
   141 00000237 48BF-                           mov     rdi, fmtint
   141 00000239 [3500000000000000] 
   142 00000241 48BE-                           mov     rsi, remi
   142 00000243 [1901000000000000] 
   143 0000024B 488B1425[08000000]              mov     rdx, [modulo]
   144 00000253 4831C0                          xor     rax, rax
   145 00000256 E8(00000000)                    call    printf
   146                                  
   147 0000025B 4889EC                      mov     rsp, rbp
   148 0000025E 5D                          pop     rbp
   149 0000025F C3                          ret
