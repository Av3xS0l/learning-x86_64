     1                                  ; cls2
     2                                  
     3                                  section .data
     4 00000000 48656C6C6F203A290A-         msg1    db  "Hello :)",10,0
     4 00000009 00                 
     5 0000000A 596F7572207475726E-         msg2    db  "Your turn (only a-z): ",0
     5 00000013 20286F6E6C7920612D-
     5 0000001C 7A293A2000         
     6 00000021 596F7520616E737665-         msg3    db  "You ansvered: ",0
     6 0000002A 7265643A2000       
     7                                      inlen   equ 10      ;buf len
     8 00000030 0A                          NL      db  0xa
     9                                  section .bss
    10 00000000 <res Bh>                    input   resb    inlen+1
    11                                  section .text
    12                                      global main
    13                                  main:
    14 00000000 55                          push    rbp
    15 00000001 4889E5                      mov     rbp, rsp
    16                                  
    17 00000004 48BF-                       mov     rdi, msg1
    17 00000006 [0000000000000000] 
    18 0000000E E852000000                  call    prints
    19 00000013 48BF-                       mov     rdi, msg2
    19 00000015 [0A00000000000000] 
    20 0000001D E843000000                  call    prints
    21                                  
    22 00000022 48BF-                       mov     rdi, input
    22 00000024 [0000000000000000] 
    23 0000002C BE0A000000                  mov     rsi, inlen
    24 00000031 E863000000                  call    reads
    25                                  
    26 00000036 48BF-                       mov     rdi, msg3
    26 00000038 [2100000000000000] 
    27 00000040 E820000000                  call    prints
    28 00000045 48BF-                       mov     rdi, input
    28 00000047 [0000000000000000] 
    29 0000004F E811000000                  call    prints
    30                                  
    31 00000054 48BF-                       mov     rdi, NL
    31 00000056 [3000000000000000] 
    32 0000005E E802000000                  call    prints
    33                                  
    34 00000063 C9                          leave
    35 00000064 C3                          ret
    36                                  ; -------------------------------------------------
    37                                  
    38                                  prints:
    39 00000065 55                          push    rbp 
    40 00000066 4889E5                      mov     rbp, rsp
    41                                  
    42 00000069 4154                        push    r12         ; calee saved
    43                                      
    44                                      ; get msg len
    45 0000006B 4831D2                      xor     rdx, rdx
    46 0000006E 4989FC                      mov     r12, rdi
    47                                  
    48                                      .lenloop:
    49 00000071 41803C2400                      cmp     byte [r12], 0
    50 00000076 7408                            je      .lenfound
    51 00000078 48FFC2                          inc     rdx
    52 0000007B 49FFC4                          inc     r12
    53 0000007E EBF1                            jmp     .lenloop
    54                                      
    55                                      .lenfound:
    56 00000080 4883FA00                        cmp     rdx, 0
    57 00000084 740F                            je      .done
    58 00000086 4889FE                          mov     rsi, rdi
    59 00000089 B801000000                      mov     rax, 1
    60 0000008E BF01000000                      mov     rdi, 1
    61 00000093 0F05                            syscall     
    62                                      
    63                                      .done:
    64 00000095 415C                        pop     r12
    65 00000097 C9                          leave
    66 00000098 C3                          ret
    67                                  ; --------------------------------------------------
    68                                  
    69                                  reads:
    70                                  section .bss
    71 0000000B ??                          .inchar     resb    1
    72                                  section .text
    73 00000099 55                          push    rbp
    74 0000009A 4889E5                      mov     rbp, rsp
    75 0000009D 4154                            push    r12         ; callee saved 12, 13, 14
    76 0000009F 4155                            push    r13
    77 000000A1 4156                            push    r14
    78                                  
    79 000000A3 4989FC                          mov     r12, rdi
    80 000000A6 4989F5                          mov     r13, rsi
    81 000000A9 4D31F6                          xor     r14, r14
    82                                  
    83                                      .readc:
    84                                  
    85 000000AC 4831C0                          xor     rax, rax
    86 000000AF BF01000000                      mov     rdi, 1
    87 000000B4 488D3425[0B000000]              lea     rsi, [.inchar]  ; address of input
    88 000000BC BA01000000                      mov     rdx, 1          ; # chars to read
    89 000000C1 0F05                            syscall
    90                                          
    91 000000C3 4831C0                          xor     rax, rax
    92 000000C6 8A0425[0B000000]                mov     al, [.inchar]   ;char is NL
    93 000000CD 3A0425[30000000]                cmp     al, byte [NL]
    94 000000D4 7419                            je      .done           ; NL = end
    95 000000D6 3C61                            cmp     al, 97          ; lower than a?
    96 000000D8 7CD2                            jl      .readc          ; ignore
    97 000000DA 3C7A                            cmp     al, 122         ; higher than z
    98 000000DC 7FCE                            jg      .readc          ; ignore
    99 000000DE 49FFC6                          inc     r14             ; inc counter
   100 000000E1 4D39EE                          cmp     r14, r13
   101 000000E4 77C6                            ja      .readc          ; bufer max reached, ignore
   102 000000E6 41880424                        mov     byte [r12], al  ; save the char  in buffer
   103 000000EA 49FFC4                          inc     r12
   104 000000ED EBBD                            jmp     .readc
   105                                  
   106                                      .done:
   107 000000EF 49FFC4                      inc     r12
   108 000000F2 41C6042400                  mov     byte [r12],0
   109 000000F7 415E                        pop     r14
   110 000000F9 415D                        pop     r13
   111 000000FB 415C                        pop     r12
   112 000000FD C9                          leave
   113 000000FE C3                          ret
