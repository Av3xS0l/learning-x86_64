     1                                  ; stack.asm
     2                                  
     3                                  extern printf
     4                                  
     5                                  section .data
     6 00000000 414243444500                string  db  "ABCDE",0
     7                                      strlen  equ $-string-1
     8 00000006 537472696E6720313A-         fmt1    db  "String 1: %s",10,0
     8 0000000F 2025730A00         
     9 00000014 537472696E6720323A-         fmt2    db  "String 2: %s",10,0
     9 0000001D 2025730A00         
    10                                  section .bss
    11                                  section .text
    12                                      global main
    13                                  main:
    14 00000000 55                          push    rbp
    15 00000001 4889E5                      mov     rbp, rsp
    16                                  
    17                                      ; orgin
    18 00000004 48BF-                       mov     rdi, fmt1
    18 00000006 [0600000000000000] 
    19 0000000E 48BE-                       mov     rsi, string
    19 00000010 [0000000000000000] 
    20 00000018 B800000000                  mov     rax, 0
    21 0000001D E8(00000000)                call    printf
    22                                  
    23                                      ; push to stack
    24 00000022 4831C0                          xor rax, rax
    25 00000025 48BB-                           mov rbx, string
    25 00000027 [0000000000000000] 
    26 0000002F B900000000                      mov rcx, 0
    27                                          pushloop:
    28 00000034 8A040B                              mov     al, byte[rbx+rcx]
    29 00000037 50                                  push    rax
    30 00000038 48FFC1                              inc     rcx
    31 0000003B 4883F905                            cmp     rcx, strlen
    32 0000003F 7CF3                                jl pushloop
    33                                          
    34 00000041 48BB-                           mov rbx, string
    34 00000043 [0000000000000000] 
    35 0000004B B900000000                      mov rcx, 0
    36                                          
    37                                          poploop:
    38 00000050 58                                  pop     rax
    39 00000051 88040B                              mov     byte [rbx+rcx], al
    40 00000054 48FFC1                              inc     rcx
    41 00000057 4883F905                            cmp     rcx, strlen
    42 0000005B 7CF3                                jl      poploop
    43 0000005D C6040B00                        mov byte [rbx+rcx], 0
    44                                  
    45                                          ; output result
    46 00000061 48BF-                           mov     rdi, fmt2
    46 00000063 [1400000000000000] 
    47 0000006B 48BE-                           mov     rsi, string
    47 0000006D [0000000000000000] 
    48 00000075 B800000000                      mov     rax, 0
    49 0000007A E8(00000000)                    call    printf
    50                                          
    51                                  
    52                                  
    53                                  
    54                                      ; exit
    55 0000007F 4889EC                      mov     rsp, rbp
    56 00000082 5D                          pop     rbp
    57 00000083 C3                          ret
